Problem statement :
Given an integer array nums of unique elements, return all possible subsets (the power set). The solution set must not contain duplicate subsets. Return the solution in any order.

Code :
class Solution {
public:
    void printsubsets(vector<int>& nums , int i , vector<int>&curr , vector <vector<int>> &res){
        if(i == nums.size())
        {
            res.push_back(curr);
            return;
        }
        
        curr.push_back(nums[i]);
        printsubsets(nums , i+1 , curr , res);
        
         curr.pop_back();
        printsubsets(nums , i+1 , curr , res);
        
    } 
    
    vector<vector<int>> subsets(vector<int>& nums) {
        vector <vector<int>> res;
        vector <int> curr ;
        int i = 0;
        printsubsets(nums ,  i ,curr  , res);
        
        return res;
        
    }
};