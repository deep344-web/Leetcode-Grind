Problem statement :
Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.Each number in candidates may only be used once in the combination.

Code :
class Solution {
public:
    vector<vector<int>> res;
    vector<int> cur;
    
    void solve(int ind, int target, vector<int> &arr){
      
        if(target == 0){
           res.push_back(cur);
           return;
       }
        
        if(ind == arr.size())
           return;
        
        for(int i = ind; i < arr.size(); i++){
            if(i > ind && arr[i] == arr[i-1])
                continue;
            
            if(arr[i] <= target){
                cur.push_back(arr[i]);
                solve(i+1, target-arr[i], arr);
                cur.pop_back();
            }
        }
        
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        solve(0, target, candidates);
        return res;
    }
};
