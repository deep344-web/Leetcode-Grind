Dijkstra's algo can be used to find shortest distance in weighted graph when all 
the weights are positive. If we have negative weights then may be we will stuck 
in negative cycle (endless loop)

For detecting if the graph has any negative cycle Bellman ford's Algo can be used

We will relax the n edges n-1 no of times and even after this many iterations if
 the distance still reduces for some node then there is negative cycle

int isNegativeWeightCycle(int n, vector<vector<int>>edges){
	    
	    vector<int> distance(n, 10000000);
	    
	    distance[0] = 0;
	    
	    for(int relax=0; relax < n-1; relax++){
	        for(int i=0; i < edges.size(); i++){
	            if(distance[edges[i][1]] > (distance[edges[i][0]] + edges[i][2]))
	            distance[edges[i][1]] = distance[edges[i][0]] + edges[i][2];
	            
	        }
	    }
	    
	    
	    for(int i=0; i<edges.size(); i++){
	         if(distance[edges[i][1]] > (distance[edges[i][0]] + edges[i][2]))
	         return 1;
	    }
	    
	    return 0;
	    
	}
