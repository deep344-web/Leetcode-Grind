This is used to find shortest distance in weighted Graphs

vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        priority_queue<pair<int , int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        pq.push({0, S});
        vector<int> dis(V, INT_MAX);
        dis[S] = 0;
        int node, dist;
        while(!pq.empty()){
            dist = pq.top().first;
            node = pq.top().second;
            
            pq.pop();
            
            for(int i=0; i<adj[node].size(); i++){
                int v = adj[node][i][0];
                int w = adj[node][i][1];
                if(dis[v] > (w + dist))
                {
                    dis[v] = w + dist;
                    pq.push({dis[v], v});
                }
            }
            
        }
        
        return dis;
    }

    