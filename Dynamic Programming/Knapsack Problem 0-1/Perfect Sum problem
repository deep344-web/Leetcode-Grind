Problem statement : 
Given an array arr[] of integers and an integer sum, the task is to count all 
subsets of the given array with a sum equal to a given sum.

Approach :  Same approach, just a change that instead of returing true or false, 
we will return no of subsets formed. Return type will be changed.


int perfectSum(int arr[], int n, int sum)
	{
	   
          int dp[n+1][sum+1];
         for(int i=0 ; i<n+1 ; i++){
             dp[i][0] = 1;
         }
         
         for(int j=1 ; j<sum+1; j++)
         {
             dp[0][j] = 0;
         }
         for(int i=1; i<n+1 ; i++){
             for(int j=1; j<sum+1 ; j++){
                 if(arr[i-1] <= j){
                     dp[i][j] = (dp[i-1][j-arr[i-1]] + dp[i-1][j])%1000000007;
                 }
                 else
                 dp[i][j] = dp[i-1][j];
             }
         }
         
         return dp[n][sum];
	}