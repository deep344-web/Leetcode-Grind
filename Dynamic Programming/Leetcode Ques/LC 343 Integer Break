Problem statement: 
Given an integer n, break it into the sum of k positive integers, where k >= 2,
and maximize the product of those integers.
Return the maximum product you can get.

Code : 
  int t[60][60];
    
    int func(int sum, int num){
        
        if(sum == 0)
            return 1;
        
        if(num == 0)
            return 0;
        
        if(t[sum][num] != -1)
            return t[sum][num];
        
        int notake = func(sum, num-1);
        int take = 0;
        if(num <= sum){
            take = num * func(sum-num, num);
        }
        
        return t[sum][num] = max(take, notake);
        
    }
    
    
    int integerBreak(int n) {
        memset(t, -1, sizeof(t));
        return func(n, n-1); 
    }