Problem statement : 
Given two strings str1 and str2. The task is to remove or insert the minimum 
number of characters from/in str1 so as to transform it into str2. It could be 
possible that the samecharacter needs to be removed/deleted from one point of 
str1 and inserted to some another point.

 Approach: Find all same chars and then find no of chars which are not present , 
 that will give us no of insertions. All other chars which need not to be there 
 they need to deleted.

 Code : 
 	int minOperations(string str1, string str2) 
	{ 
	    int m = str1.length(), n = str2.length();
	    int dp[m+1][n+1];
        for(int i=0 ; i<m+1 ; i++){
            for(int j=0 ; j<n+1 ; j++){
                if(i == 0 || j == 0)
                dp[i][j] = 0;
                
                else if(str1[i-1] == str2[j-1])
                dp[i][j] = dp[i-1][j-1] +1;
                
                else 
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
        
        int deletions = m - dp[m][n];
        int insertions = n- dp[m][n];
        
        return (deletions+insertions);
        
	    
	} 