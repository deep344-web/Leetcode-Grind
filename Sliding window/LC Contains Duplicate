Problem Statement:

Given an integer array nums and two integers k and t, return true if there are two distinct indices i and j in
 the array such that abs(nums[i] - nums[j]) <= t and abs(i - j) <= k.


Code:
bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        
        set<long long int> set1;
        
       for(int i=0; i<nums.size(); i++){
           if(i > k)
              set1.erase(nums[i-k-1]);
           
           auto it = set1.lower_bound((long long int)nums[i] - t);
               
           if(it != set1.end() && ((*it - nums[i]) <= t))
               return true;
           
           set1.insert(nums[i]);
       }
        
        return false;
        
    }

Set has one function lower_bound(num) which returns iterator to element inside set having same value or
immediate smaller one. Its time Complexity is O(log n)

TC : O(n Log k)

