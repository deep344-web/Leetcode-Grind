Given a Binary Tree, find its Boundary Traversal. Left boundary nodes, Reverse right boundary 
nodes and Leaf nodes

Code :
void left(Node *root, vector<int> &ans){
    if(root == NULL || (root->left == NULL && root->right == NULL))
    return;
    
    ans.push_back(root->data);
    if(root->left)
      left(root->left, ans);

    else
      left(root->right, ans);

}

void right(Node *root, vector<int>&ans){
     if(root == NULL || (root->left == NULL && root->right == NULL))
    return;
    
    ans.push_back(root->data);
    
    if(root->right)
    right(root->right, ans);
    
    else
    right(root->left, ans);
}

void bottom(Node *root, vector<int>&ans){
    if(root == NULL)
    return;
    
    if(root->left == NULL && root->right == NULL)
    ans.push_back(root->data);
    
    bottom(root->left, ans);
    bottom(root->right, ans);
}


    vector <int> boundary(Node *root)
    {
        vector<int> ans;
        ans.push_back(root->data);
        left(root->left , ans);
        bottom(root, ans);
        int size = ans.size();
        right(root->right, ans);
        reverse(ans.begin() + size, ans.end());
        return ans;
    }