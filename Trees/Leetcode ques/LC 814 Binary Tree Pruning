Problem statement :
Given the root of a binary tree, return the same tree where every subtree (of the 
given tree) not containing a 1 has been removed.

A subtree of a node node is node plus every node that is a descendant of node.

Code :
 bool solve(TreeNode *root)
    {
        if(root == NULL)
            return false;
        
        if(root->left == NULL && root->right == NULL)
        {
            return root->val == 1 ? true : false;
        }
        
        bool l = solve(root->left);
        bool r = solve(root->right);
       
        if(l == false)
            root->left = NULL;
        
        if(r == false)
            root->right = NULL;
        
        if(l || r || root->val == 1)
            return true;
        
        else
            return false;
            
    }
    
    
    TreeNode* pruneTree(TreeNode* root) {
        bool ans = solve(root);
        cout<<ans;
        if(ans == false)
            return NULL;
        
        return root;
    }