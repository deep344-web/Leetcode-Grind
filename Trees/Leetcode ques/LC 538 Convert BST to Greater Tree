Problem statement :
Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such 
that every key of the original BST is changed to the original key plus the sum of 
all keys greater than the original key in BST.

Hint : Inorder traversal

Code :
  void solve(TreeNode *root, int &sum)
    {
        if(root == NULL)
            return ;
        
        solve(root->right, sum);
        
        sum += root->val;
        root->val = sum;
        
        solve(root->left, sum);
        
    }
    
    
    TreeNode* convertBST(TreeNode* root) {
        int sum = 0;
        solve(root, sum);
        
        return root;
    }