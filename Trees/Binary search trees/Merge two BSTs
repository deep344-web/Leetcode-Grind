


void convertToDLL(Node * root, Node * &prev, Node *&head){
        if(root == NULL)
        return;
        
        convertToDLL(root->left, prev, head);
    
        root->left = prev;
        
        if(prev != NULL)
            prev->right = root;
    
        else
              head = root;
        
        prev = root;
        
        convertToDLL(root->right, prev, head);
    }
    
    vector<int> mergeLists(Node *root1, Node *root2)
    {
        vector<int>v;
        
       Node *ptr1 = root1, *ptr2 = root2;
       
       while(ptr1 != NULL && ptr2 != NULL)
       {
           if(ptr1->data <= ptr2->data)
           {
               v.push_back(ptr1->data);
               ptr1 = ptr1->right;
           }
           
           else
           {
              v.push_back(ptr2->data);
               ptr2 = ptr2->right;
           }
       }
       
       while(ptr1 != NULL)
       {
           v.push_back(ptr1->data); 
           ptr1 = ptr1->right;
       }
       
       while(ptr2 != NULL)
       {
          v.push_back(ptr2->data); 
           ptr2 = ptr2->right; 
       }
       
       return v;
       
    }
    
vector<int> merge(Node *root1, Node *root2){
       Node *head1 = NULL, *head2 = NULL, *prev = NULL;
       convertToDLL(root1, prev, head1);
      prev = NULL;
       
      convertToDLL(root2, prev, head2);
       
       vector<int> v = mergeLists(head1, head2);
      
       return v;
    }