Given a Binary Search Tree (BST) and a range l-h(inclusive), count the number
of nodes in the BST that lie in the given range.

The values smaller than root go to the left side
The values greater and equal to the root go to the right side

void count(Node *root , int l , int h, int &c){
    if(root == NULL)
    return;
    
     if(root->data >= l && root->data <= h){
         c++;
         count(root->left , l , h , c);
         count(root->right , l , h , c);
     }
   else if(root->data < l && root->data <= h)
   {
       count(root->right, l , h , c);
   }
   else if(root->data >= l && root->data > h){
       count(root->left , l , h , c);
   }
}
int getCount(Node *root, int l, int h)
{
  int c = 0;
  count(root , l , h , c);
  
  return c;
}
