Problem statement :
Given two n-ary trees. Check if they are mirror images of each other or not. You are
also given e denoting the number of edges in both trees, and two arrays, A[] and 
B[]. Each array has 2*e space separated values u,v denoting an edge from u to v for
the both trees.

Code :
int checkMirrorTree(int n, int e, int A[], int B[]) {
       map<int, stack<int> > map1;

       for(int i=1; i < e * 2; i += 2){
           map1[A[i-1]].push(A[i]);
       }
       
       for(int i=1; i < 2*e; i += 2){
           if(map1[B[i-1]].empty() || map1[B[i-1]].top() != B[i])
               return false;
           
           else
                map1[B[i-1]].pop();
       }
       
       return true;
}