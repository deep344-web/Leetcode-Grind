Given a binary tree of size N, your task is to that find all duplicate subtrees 
from the given binary tree. You need to return only the roots of these subtrees.

Code :
string duplicates (Node *root , map <string , int> &map1 , vector <Node*> &ans )
{
        if(root == NULL)
        return "$";
        
        string s = ""; 
       
        s += root->data;
        s += duplicates(root->left , map1 , ans);
        s += duplicates(root->right , map1 , ans);
        
        map1[s]++;
        if(map1[s] == 2)
        ans.push_back(root);
        return s;
        
}

vector<Node*> printAllDups(Node* root)
{
    map <string, int> map1;
    vector <Node *> ans;
    duplicates(root , map1 , ans);
    return ans;
}


