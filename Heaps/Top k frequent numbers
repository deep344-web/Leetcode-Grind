Problem statement:
Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

Code:
 vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> map1;
        for(int i=0; i<nums.size(); i++){
            map1[nums[i]]++;
        }
        
        priority_queue<pair<int, int>, vector<pair<int, int>>,
                   greater<pair<int, int>>> pq; 
        for(auto ele = map1.begin(); ele != map1.end(); ele++)
        {
            pq.push({ele->second, ele->first});
            if(pq.size() > k)
                pq.pop();
        }
        
        
        vector<int> ans;
        while(pq.size() > 0){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        
        return ans;
        
    }
    