Problem statement :
Given two binary max heaps as arrays, merge the given heaps to form a new max heap.


Code :
 void heapify(vector<int> &arr, int n, int i)  
     {
        int largest = i;
       int l = 2*i + 1;
       int r = 2*i + 2;
       
       if(l < n && arr[l] > arr[largest])
       {
           largest = l;
       }
       
       if(r < n && arr[r] > arr[largest])
       {
           largest = r;
       }
       
       if(largest != i)
          {
              swap(arr[largest], arr[i]);
              heapify(arr, n, largest);
          }
    }
   vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        int i=0, j =0;
        vector<int>v;
        while(i < a.size() && j < b.size()){
            if(a[i] >= b[j])
                v.push_back(a[i++]);
                
             else
             v.push_back(b[j++]);
            }
        
        
        while(i < a.size())
        v.push_back(a[i++]);
        
        while(j < b.size())
        v.push_back(b[j++]);
        
        int size = v.size();
     for(int i = size/2 - 1; i >= 0; i--){
           heapify(v, size, i);
       }
       
        return v;
    }
