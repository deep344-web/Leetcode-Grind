Problem statement : 
Given a linked list of size N. The task is to reverse every k nodes (where k is an
input to the function) in the linked list. If the number of nodes is not a 
multiple of k then left-out nodes, in the end, should be considered as a group
and must be reversed


Code : 

struct node *reverse (struct node *head, int k)
    { 
       node *nex , *prev = NULL , *curr = head;
        int c= 0;
        
        while(curr != NULL && c < k)
        {
            nex = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nex;
            c++;
            
        }
        if(curr != NULL)
        head->next = reverse(nex , k);
        
        return prev;  
    }