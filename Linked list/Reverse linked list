 
 * Reverse Linked list
 
 struct Node* reverseList(struct Node *head)
    {
        Node *ptr = head, *temp, *preptr = NULL;
        while(ptr != NULL)
        {
            temp = ptr->next;
            ptr->next = preptr;
            preptr = ptr;
            ptr = temp;
        }
        
        return preptr;
    }





*Delete node without head pointer

     void deleteNode(ListNode* node) {
      
        node->val = node->next->val;
        node->next = node->next->next;
    }


*Reverse doubly linked list

struct Node* reverseDLL(struct Node * head)
{
    struct Node* ptr = head;
    while(ptr != NULL )
    {
        struct Node *nex = ptr->next;
        ptr->next = ptr->prev;
        ptr->prev = nex;
        head = ptr;
        ptr = nex;
        
    }
    
    return head;
    
    
}