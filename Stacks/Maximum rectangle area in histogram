Problem statement :
Find the largest rectangular area possible in a given histogram where the largest 
rectangle can be made of a number of contiguous bars. For simplicity, assume that 
all bars have the same width and the width is 1 unit, there will be N bars height 
of each bar will be given by the array arr.

Code :
 long long getMaxArea(long long a[], int n)
    {
         stack<long long int> st, s;
        vector<long long int> nsl;
        
        for(int i=0; i<n; i++){
            while(!st.empty() && a[st.top()] >= a[i])
              st.pop();
              
              if(st.empty())
            nsl.push_back(-1);
            
            else
            nsl.push_back(st.top());
            
            st.push(i);
        }
        
    
         vector<long long int> nsr;
         for(int i=n-1; i >= 0; i--){
            while(!s.empty() && a[s.top()] >= a[i])
              s.pop();
              
              if(s.empty())
            nsr.push_back(n);
            
            else
            nsr.push_back(s.top());
            
            s.push(i);
        }
        
        reverse(nsr.begin(), nsr.end());
        
        
        long long int max_area = 0;
        for(int i=0; i<n; i++){
        
            max_area = max(max_area, (nsr[i] - nsl[i] - 1) * a[i]);
        }
        
        return max_area;
    }

